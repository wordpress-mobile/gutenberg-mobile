{
	"name": "gutenberg-mobile",
	"version": "1.101.1",
	"private": true,
	"config": {
		"jsfiles": "./*.js src/*.js src/**/*.js src/**/**/*.js",
		"scssfiles": "src/*.scss src/**/*.scss"
	},
	"engines": {
		"node": ">=8.0.0 <9.0.0 || >=10.0.0",
		"npm": ">=6.9.0 <7"
	},
	"devDependencies": {
		"@babel/core": "^7.20.0",
		"@babel/runtime": "^7.20.0",
		"@react-native-community/cli": "^10.0.0",
		"@typescript-eslint/eslint-plugin": "^4.31.0",
		"@wordpress/babel-preset-default": "file:gutenberg/packages/babel-preset-default",
		"@wordpress/eslint-plugin": "file:gutenberg/packages/eslint-plugin",
		"appium": "^1.22.3",
		"babel-core": "^7.0.0-bridge.0",
		"babel-eslint": "^8.2.2",
		"babel-jest": "29.5.0",
		"babel-plugin-react-native-classname-to-style": "^1.2.1",
		"babel-plugin-react-native-platform-specific-extensions": "^1.1.1",
		"babel-plugin-transform-remove-console": "6.9.4",
		"cross-env": "^5.1.4",
		"empty": "^0.10.1",
		"enzyme": "^3.9.0",
		"enzyme-adapter-react-16": "^1.11.2",
		"enzyme-to-json": "^3.3.5",
		"equivalent-key-map": "^0.2.0",
		"eslint": "^6.8.0",
		"eslint-plugin-eslint-comments": "3.1.2",
		"eslint-plugin-import": "2.18.2",
		"eslint-plugin-jest": "27.2.1",
		"eslint-plugin-jsdoc": "^39.6.9",
		"eslint-plugin-react-native": "^3.6.0",
		"gettext-parser": "^4.0.3",
		"husky": "^3.0.2",
		"identity-obj-proxy": "^3.0.0",
		"jest": "29.5.0",
		"jest-image-snapshot": "^6.1.0",
		"jest-jasmine2": "29.5.0",
		"jest-junit": "^13.0.0",
		"jimp": "^0.22.1",
		"metro-react-native-babel-preset": "^0.73.10",
		"metro-resolver": "^0.73.10",
		"node-fetch": "^2.3.0",
		"patch-package": "^6.2.2",
		"prettier": "npm:wp-prettier@1.19.1",
		"react-native-sass-transformer": "^1.1.1",
		"regenerator-runtime": "^0.12.1",
		"remote-redux-devtools": "^0.5.12",
		"rungen": "^0.3.2",
		"sprintf-js": "^1.1.1",
		"typescript": "4.1.3",
		"wd": "^1.11.1"
	},
	"scripts": {
		"postinstall": "patch-package && npm run clean:gutenberg:distclean && npm ci --prefix gutenberg && npm run i18n:check-cache && ./bin/run-jetpack-command.sh \"install --ignore-scripts\"",
		"start": "echo \"\\x1b[33mThe start command is not available in this project. It is strongly recommended to use \\x1b[1:33mstart:reset\\x1b[0m\\x1b[33m to perform some cleanup when starting the metro bundler.\nOr you may use \\x1b[1:33mstart:quick\\x1b[0m\\x1b[33m for a quicker startup, but this may lead to unexpected javascript errors when running the app.\\x1b[0m\"",
		"start:reset": "npm run core clean:runtime && npm run start:quick -- --reset-cache",
		"start:quick": "react-native start --config ./metro.config.js",
		"core": "cd gutenberg && npm run native",
		"prern-bundle": "patch-package --patch-dir gutenberg/packages/react-native-editor/metro-patch",
		"rn-bundle": "react-native bundle",
		"postrn-bundle": "patch-package --reverse --patch-dir gutenberg/packages/react-native-editor/metro-patch",
		"i18n:check-cache": "./bin/i18n-check-cache.sh jetpack wp-plugins/jetpack layout-grid wp-plugins/layout-grid jetpack-videopress-pkg wp-plugins/jetpack",
		"i18n:update": "./bin/i18n-update.sh jetpack wp-plugins/jetpack ./jetpack/projects/plugins/jetpack/extensions layout-grid wp-plugins/layout-grid ./block-experiments/blocks/layout-grid jetpack-videopress-pkg wp-plugins/jetpack ./jetpack/projects/packages/videopress",
		"i18n:update:test": "./bin/i18n-update.sh --path i18n-test jetpack wp-plugins/jetpack ./jetpack/projects/plugins/jetpack/extensions layout-grid wp-plugins/layout-grid ./block-experiments/blocks/layout-grid jetpack-videopress-pkg wp-plugins/jetpack ./jetpack/projects/packages/videopress",
		"bundle": "npm run clean && npm run bundle:js",
		"prebundle:js": "npm run i18n:update",
		"bundle:js": "npm run bundle:android && npm run bundle:ios",
		"bundle:android": "npm run bundle:android:text && npm run bundle:android:bytecode",
		"bundle:android:text": "mkdir -p bundle/android && npm run rn-bundle -- --platform android --dev false --entry-file ./index.js --assets-dest ./bundle/android --bundle-output ./bundle/android/App.text.js --sourcemap-output ./bundle/android/App.text.js.map",
		"bundle:android:bytecode": "./gutenberg/node_modules/react-native/sdks/hermesc/`node -e \"const platform=require('os').platform();console.log(platform === 'darwin' ? 'osx-bin' : (platform === 'linux' ? 'linux64-bin' : (platform === 'win32' ? 'win64-bin' : 'unsupported-os')));\"`/hermesc -emit-binary -O -out bundle/android/App.js bundle/android/App.text.js -output-source-map",
		"bundle:ios": "npm run bundle:ios:text && npm run bundle:ios:bytecode",
		"bundle:ios:text": "mkdir -p bundle/ios && npm run rn-bundle -- --platform ios --dev false --entry-file ./index.js --assets-dest ./bundle/ios --bundle-output ./bundle/ios/App.text.js --sourcemap-output ./bundle/ios/App.text.js.map",
		"bundle:ios:bytecode": "./gutenberg/node_modules/react-native/sdks/hermesc/`node -e \"const platform=require('os').platform();console.log(platform === 'darwin' ? 'osx-bin' : (platform === 'linux' ? 'linux64-bin' : (platform === 'win32' ? 'win64-bin' : 'unsupported-os')));\"`/hermesc -emit-binary -O -out bundle/ios/App.js bundle/ios/App.text.js -output-source-map",
		"prewpandroid": "rm -Rf $TMPDIR/gbmobile-wpandroidfakernroot && mkdir $TMPDIR/gbmobile-wpandroidfakernroot && ln -s $(cd \"$(dirname \"../../../\")\"; pwd) $TMPDIR/gbmobile-wpandroidfakernroot/android",
		"wpandroid": "cd gutenberg && react-native run-android --root $TMPDIR/gbmobile-wpandroidfakernroot --variant wasabiDebug --appIdSuffix beta --appFolder WordPress --main-activity=ui.WPLaunchActivity",
		"test": "cross-env NODE_ENV=test jest --config ./jest.config.js",
		"test:update": "cross-env NODE_ENV=test jest --config ./jest.config.js --updateSnapshot",
		"test:debug": "cross-env NODE_ENV=test node --inspect-brk node_modules/.bin/jest --runInBand --verbose --config jest.config.js",
		"device-tests": "cross-env NODE_ENV=test jest --maxWorkers=2 --testPathIgnorePatterns='canary|gutenberg-editor-rendering|ipad' --config jest_ui.config.js",
		"device-tests-canary": "cross-env NODE_ENV=test jest --maxWorkers=2 --testPathPattern=@canary --config jest_ui.config.js",
		"device-tests-ipad": "cross-env NODE_ENV=test IPAD=true jest --maxWorkers=2 --testPathPattern=@ipad --config jest_ui.config.js",
		"device-tests:local": "IOS_APP_PATH='./gutenberg/packages/react-native-editor/ios/build/GutenbergDemo/Build/Products/Release-iphonesimulator/GutenbergDemo.app' WDA_PATH='./gutenberg/packages/react-native-editor/ios/build/WDA' ANDROID_APP_PATH='./gutenberg/packages/react-native-editor/android/app/build/outputs/apk/debug/app-debug.apk' NODE_ENV=test jest --maxWorkers=2 --detectOpenHandles --config jest_ui.config.js",
		"device-tests:debug": "IOS_APP_PATH='./gutenberg/packages/react-native-editor/ios/build/GutenbergDemo/Build/Products/Release-iphonesimulator/GutenbergDemo.app' WDA_PATH='./gutenberg/packages/react-native-editor/ios/build/WDA' ANDROID_APP_PATH='./gutenberg/packages/react-native-editor/android/app/build/outputs/apk/debug/app-debug.apk' cross-env NODE_ENV=test node $NODE_DEBUG_OPTION --inspect-brk node_modules/jest/bin/jest --runInBand --detectOpenHandles --verbose --config jest_ui.config.js",
		"test:e2e:bundle:android": "npm run test:e2e:bundle:android:text && npm run test:e2e:bundle:android:bytecode",
		"test:e2e:bundle:android:text": "mkdir -p gutenberg/packages/react-native-editor/android/app/src/main/assets && npm run rn-bundle -- --reset-cache --platform android --dev false --minify false --entry-file index.js --bundle-output gutenberg/packages/react-native-editor/android/app/src/main/assets/index.android.text.bundle --assets-dest gutenberg/packages/react-native-editor/android/app/src/main/res",
		"test:e2e:bundle:android:bytecode": "./gutenberg/node_modules/react-native/sdks/hermesc/`node -e \"const platform=require('os').platform();console.log(platform === 'darwin' ? 'osx-bin' : (platform === 'linux' ? 'linux64-bin' : (platform === 'win32' ? 'win64-bin' : 'unsupported-os')));\"`/hermesc -emit-binary -O -out gutenberg/packages/react-native-editor/android/app/src/main/assets/index.android.bundle gutenberg/packages/react-native-editor/android/app/src/main/assets/index.android.text.bundle -output-source-map",
		"test:e2e:android:local": "npm run test:e2e:bundle:android && npm run core test:e2e:build-app:android && TEST_RN_PLATFORM=android npm run device-tests:local",
		"test:e2e:bundle:ios": "mkdir -p gutenberg/packages/react-native-editor/ios/build/GutenbergDemo/Build/Products/Release-iphonesimulator/GutenbergDemo.app && npm run rn-bundle -- --reset-cache --platform=ios --dev=false --minify false --entry-file=index.js --bundle-output=./gutenberg/packages/react-native-editor/ios/build/GutenbergDemo/Build/Products/Release-iphonesimulator/GutenbergDemo.app/main.jsbundle --assets-dest=./gutenberg/packages/react-native-editor/ios/build/GutenbergDemo/Build/Products/Release-iphonesimulator/GutenbergDemo.app",
		"test:e2e:ios:local": "npm run test:e2e:bundle:ios && npm run core test:e2e:build-app:ios && npm run core test:e2e:build-wda && TEST_RN_PLATFORM=ios npm run device-tests:local",
		"sync:android": "bin/sync-android.sh",
		"build:gutenberg": "cd gutenberg && npm run build",
		"clean": "npm run core clean; npm run clean:gutenberg; npm run clean:i18n",
		"clean:gutenberg": "cd gutenberg && npm run clean:packages",
		"clean:gutenberg:distclean": "cd gutenberg && npm run distclean",
		"clean:i18n": "rm -rf src/i18n-cache && npm run i18n:check-cache",
		"lint": "eslint . --ext .js",
		"lint:fix": "npm run lint -- --fix",
		"version": "npm run bundle && git add -A bundle"
	},
	"dependencies": {}
}
