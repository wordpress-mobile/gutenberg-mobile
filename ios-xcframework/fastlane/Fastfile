# frozen_string_literal: true

default_platform :ios

PROJECT_ROOT_FOLDER = File.dirname(File.expand_path(__dir__))

before_all do
  # Ensure we use the latest version of the toolkit
  check_for_toolkit_updates unless is_ci || ENV['FASTLANE_SKIP_TOOLKIT_UPDATE_CHECK']
end

lane :upload_xcframework_to_s3 do |options|
  archive_type = 'tar.gz'
  xcframework_archive_path = File.join(PROJECT_ROOT_FOLDER, "build/xcframeworks/Gutenberg.#{archive_type}")

  unless File.exist? xcframework_archive_path
    UI.user_error! "Could not find XCFramework archive to upload at #{xcframework_archive_path}"
  end

  name = options.fetch(:name, nil)

  if name.nil?
    name = "Gutenberg-#{last_git_commit[:commit_hash]}.#{archive_type}"
    UI.message "No name provide, will default to #{name}"
  end

  upload_xcframework_to_s3(path: xcframework_archive_path, name_on_s3: name)

  next unless is_ci

  tag = ENV.fetch('BUILDKITE_TAG', nil)

  next if tag.nil? || tag.empty?

  upload_xcframework_to_s3(
    path: xcframework_archive_path,
    name_on_s3: "Gutenberg-#{tag}.#{archive_type}"
  )
end

def upload_xcframework_to_s3(path:, name_on_s3:)
  upload_to_s3(
    bucket: 'a8c-apps-public-artifacts',
    key: name_on_s3,
    file: path,
    auto_prefix: false,
    skip_if_exists: false
  )
end
