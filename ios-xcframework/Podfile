# frozen_string_literal: true

require 'xcodeproj'

REACT_NATIVE_PATH = '../gutenberg/node_modules/react-native'
require_relative File.join(REACT_NATIVE_PATH, 'scripts', 'react_native_pods')

# We are still trying to decide whether to adopt Hermes or not.
#
# This switch allows us to switch between approaches on the go.
HERMES_ENABLED = ENV.fetch('HERMES_ENABLED', true)

puts "[Gutenberg] Installing pods with Hermes #{HERMES_ENABLED ? 'enabled' : 'disabled'}"

# Note that the pods in this array might seem unused if you look for
# `import` statements in this codebase. However, make sure to also check
# whether they are used in the gutenberg-mobile and Gutenberg projects.
#
# Also notice that these are not all the dependencies the project uses.
# Later in the config, we call use_react_native! which fetches more.
#
# See https://github.com/wordpress-mobile/gutenberg-mobile/issues/5025
DEPENDENCIES = %w[
  react-native-safe-area
  react-native-safe-area-context
  react-native-video
  react-native-webview
  RNSVG
  react-native-slider
  BVLinearGradient
  react-native-get-random-values
  react-native-blur
  RNScreens
  RNReanimated
  RNGestureHandler
  RNCMaskedView
  RNCClipboard
  RNFastImage
  React-jsc
].freeze

def gutenberg_dependencies
  podspec_prefix = '..'

  computed_dependencies = DEPENDENCIES.dup

  # Use a custom RNReanimated version while we coordinate a fix upstream
  computed_dependencies.delete('RNReanimated')

  computed_dependencies.delete('React-jsc') unless HERMES_ENABLED

  # Use a custom RNReanimated version while we coordinate a fix upstream
  computed_dependencies.each do |pod_name|
    pod pod_name, podspec: "#{podspec_prefix}/third-party-podspecs/#{pod_name}.podspec.json"
  end

  pod 'RNReanimated', git: 'https://github.com/wordpress-mobile/react-native-reanimated', branch: 'mokagio/fix-custom-node_modules-bypass-multiple-versions-check-2.17.0'
end

VERSION_XCCONFIG_PATH = File.join(File.expand_path(__dir__), 'Config', 'Gutenberg-Shared.xcconfig')
IOS_VERSION_KEY = 'IPHONEOS_DEPLOYMENT_TARGET'
APP_IOS_DEPLOYMENT_TARGET = Gem::Version.new(Xcodeproj::Config.new(VERSION_XCCONFIG_PATH).to_hash[IOS_VERSION_KEY])

platform :ios, APP_IOS_DEPLOYMENT_TARGET.version

# It's important to call use_frameworks! before use_react_native!
#
# See https://github.com/facebook/react-native/issues/36120#issuecomment-1425892304
use_frameworks! linkage: :static
use_react_native! path: REACT_NATIVE_PATH, hermes_enabled: HERMES_ENABLED

target 'Gutenberg' do
  pod 'RNTAztecView', path: '..'
  gutenberg_dependencies
end

pre_install do
  # This is required to workaround an issue with RNReanimated after upgrading to version 2.17.0
  rn_node_modules = File.join(Dir.pwd, '..', 'gutenberg', 'node_modules')

  raise "Could not find node modules at given path #{rn_node_modules}" unless File.exist? rn_node_modules

  ENV['REACT_NATIVE_NODE_MODULES_DIR'] = rn_node_modules

  puts "[Gutenberg] Set REACT_NATIVE_NODE_MODULES_DIR env var for RNReanimated to #{rn_node_modules}"
end

post_install do |installer|
  react_native_post_install(installer, REACT_NATIVE_PATH)

  installer.pods_project.targets.each do |target|
    # Work around issue with embedding the Hermes XCFramework
    #
    # See https://github.com/facebook/react-native/issues/35863
    if HERMES_ENABLED && target.name == 'hermes-engine'
      installer.pods_project.files.each do |fileref|
        next unless fileref.path.end_with? 'hermes.xcframework'

        plist_buddy = '/usr/libexec/PlistBuddy'

        raise "[Gutenberg] Could not find PlistBuddy at #{plist_buddy}." unless File.exist?(plist_buddy)

        hermes_plist_file = "#{fileref.real_path}/Info.plist"

        # Patch Hermes to remove the debug symbols entry from the Info.plist (as it's not shipped with it)
        # This might be removed once Hermes starts to ship with Debug symbols or we remove our
        # direct dependency from the Main iOS target on "hermes.xcframework"
        Open3.capture3(plist_buddy, '-c', 'Delete :AvailableLibraries:0:DebugSymbolsPath', hermes_plist_file)
        Open3.capture3(plist_buddy, '-c', 'Delete :AvailableLibraries:1:DebugSymbolsPath', hermes_plist_file)
        Open3.capture3(plist_buddy, '-c', 'Delete :AvailableLibraries:2:DebugSymbolsPath', hermes_plist_file)

        puts '[Gutenberg] Removed Hermes dSYMs references from its XCFramework'
      end
    end

    # Let Pods targets inherit deployment target from the app
    # See https://github.com/CocoaPods/CocoaPods/issues/4859
    #
    # Exclude RCT-Folly as it requires explicit deployment target
    # See https://git.io/JPb73
    next if target.name == 'RCT-Folly'

    target.build_configurations.each do |configuration|
      pod_ios_deployment_target = Gem::Version.new(configuration.build_settings[IOS_VERSION_KEY])
      configuration.build_settings.delete(IOS_VERSION_KEY) if pod_ios_deployment_target <= APP_IOS_DEPLOYMENT_TARGET
    end
  end

  # This is to work around FBReactNativeSpec not finding Node.
  #
  # gutenberg-mobile/ios-xcframework/Pods/../../gutenberg/node_modules/react-native/React/FBReactNativeSpec/../../scripts/xcode/with-environment.sh: line 35: .xcode.env: command not found
  # [...]
  # [Warning] You need to configure your node path in the  environment.  You can set it up quickly by running:  echo 'export NODE_BINARY=' > .xcode.env  in the ios folder. This is needed by React Native to work correctly. [...]
  #
  node_path = `command -v node`.strip
  `echo 'export NODE_BINARY=#{node_path}' > .xcode.env`
  puts "[Gutenberg] Generated .xcode.env file with NODE_BINARY=#{node_path}. You can override that value by creating a .xcode.env.local version."
end
