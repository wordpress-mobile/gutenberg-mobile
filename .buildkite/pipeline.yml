x-common-params:
  - &gb-mobile-docker-container
    docker#v3.8.0:
      image: "public.ecr.aws/automattic/gb-mobile-image:latest"
      environment:
        - "CI=true"
        # Allow WP-CLI to be run as root, otherwise it throws an exception.
        # Reference: https://git.io/J9q2S
        - "WP_CLI_ALLOW_ROOT=true"
  - &publish-android-artifacts-docker-container
    docker#v3.8.0:
      image: "public.ecr.aws/automattic/android-build-image:v1.1.0"
      propagate-environment: true
      environment:
        # DO NOT MANUALLY SET THESE VALUES!
        # They are passed from the Buildkite agent to the Docker container
        - "AWS_ACCESS_KEY"
        - "AWS_SECRET_KEY"

steps:
  - block: "Request trigger Android bundle and builds"
    branches: "dependabot/submodules/*"

  - label: Build npm cache
    key: build-npm
    plugins:
      - automattic/git-shallow-clone
    command: |
      echo "--- :docker: Build Docker image"
      make ci_build_docker_image
      echo "--- :npm: Build node dependencies if needed"
      make ci_build_dependencies

  - label: Lint
    depends_on: build-npm
    key: lint
    plugins:
      - automattic/git-shallow-clone
    command: |
      echo "--- :docker: Build Docker image"
      make ci_build_docker_image
      echo "--- :node: Lint"
      make ci_lint

  - label: Android Unit Tests
    depends_on: build-npm
    key: unit-tests-android
    plugins:
      - automattic/git-shallow-clone
    command: |
      echo "--- :docker: Build Docker image"
      make ci_build_docker_image
      echo "--- :node: Unit Tests"
      make ci_unit_tests_android
    artifact_paths:
      - ./*-tests-out.log

  - label: iOS Unit Tests
    depends_on: build-npm
    key: unit-tests-ios
    plugins:
      - automattic/git-shallow-clone
    command: |
      echo "--- :docker: Build Docker image"
      make ci_build_docker_image
      echo "--- :node: Unit Tests"
      make ci_unit_tests_ios
    artifact_paths:
      - ./*-tests-out.log

  - label: "Build JS Bundles"
    depends_on:
      - build-npm
      # Don't wait for tests while testing the setup
      # - "unit-tests-android"
      # - "unit-tests-ios"
    key: "js-bundles"
    plugins:
      - automattic/git-shallow-clone
    command: |
      echo "--- :docker: Build Docker image"
      make ci_build_docker_image
      echo "--- :npm: Build node dependencies if needed"
      make ci_build_js_bundles
    artifact_paths:
      - build/android/App.js
      - build/ios/App.js

  - label: "Build Android RN Aztec & Publish to S3"
    depends_on: "unit-tests-android"
    key: "publish-react-native-aztec-android"
    plugins:
      - *publish-android-artifacts-docker-container
      - automattic/git-shallow-clone
    command: |
      .buildkite/publish-react-native-aztec-android-artifacts.sh

  - label: "Build Android RN Bridge & Publish to S3"
    depends_on:
      - "js-bundles"
      - "publish-react-native-aztec-android"
    plugins:
      - automattic/git-shallow-clone
      - *publish-android-artifacts-docker-container
    command: |
      .buildkite/publish-react-native-bridge-android-artifacts.sh

  - label: Build iOS RN XCFramework & Publish to S3
    depends_on: js-bundles
    command: .buildkite/publish-react-native-ios-artifacts.sh
    artifact_paths:
      - ios-xcframework/build/xcframeworks/*.tar.gz
    plugins:
      - automattic/a8c-ci-toolkit#2.17.0
      - automattic/git-shallow-clone
    agents:
      queue: mac
    env:
      IMAGE_ID: xcode-14.3

  - label: Build and Test Android Editor
    depends_on: 'build-npm'
    plugins:
      - *publish-android-artifacts-docker-container
      - automattic/git-shallow-clone
    command: |
      .buildkite/download-dependencies.sh
      cd gutenberg/packages/react-native-editor/android && ./gradlew testDebug

  - label: Build and Test Android Bridge
    depends_on: 'build-npm'
    plugins:
      - *publish-android-artifacts-docker-container
      - automattic/git-shallow-clone
    command: |
      .buildkite/download-dependencies.sh
      cd gutenberg/packages/react-native-bridge/android && ./gradlew test

  # TODO: Add a block step for UI tests

  # - label: Build and Test Android .apk
  #   depends_on:
  #     - build-npm
  #     # Don't wait for tests while testing the setup
  #     # - unit-tests-android
  #   command: |
  #     source /root/.bashrc

  #     echo "--- :node: Install NVM"
  #     curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash

  #     echo "--- :node: Setup Node environment"
  #     nvm install && nvm use

  #     node .buildkite/download-caches.js

  #     # TODO: We'll want to cache this somehow
  #     echo "--- :react: Build Android bundle for testing"
  #     npm run test:e2e:bundle:android

  #     echo "--- :react: Build Android app for testing"
  #     npm run core test:e2e:build-app:android

  #     echo "-- :saucelabs: Test on Saucelabs"
  #     echo "TODO"
  #   plugins:
  #     - *publish-android-artifacts-docker-container
  #     - automattic/git-shallow-clone
