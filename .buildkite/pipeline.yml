x-common-params:
  - &gb-mobile-docker-container
    docker#v3.8.0:
      image: "public.ecr.aws/automattic/gb-mobile-image:latest"
      environment:
        - "CI=true"
        # Allow WP-CLI to be run as root, otherwise it throws an exception.
        # Reference: https://git.io/J9q2S
        - "WP_CLI_ALLOW_ROOT=true"
  - &publish-android-artifacts-docker-container
    docker#v3.8.0:
      image: "public.ecr.aws/automattic/android-build-image:v1.1.0"
      propagate-environment: true
      environment:
        # DO NOT MANUALLY SET THESE VALUES!
        # They are passed from the Buildkite agent to the Docker container
        - "AWS_ACCESS_KEY"
        - "AWS_SECRET_KEY"

steps:
  - block: "Request trigger Android bundle and builds"
    branches: "dependabot/submodules/*"

  - label: Build npm cache
    key: build-npm
    plugins:
      - *gb-mobile-docker-container
    command: |
      source /root/.bashrc

      echo "--- :node: Setup Node environment"
      nvm install && nvm use

      # Note that `npm ci` deletes node_modules and installs from scratch, for a deterministic CI build
      echo "--- :npm: Build dependencies cache"
      npm ci --unsafe-perm --prefer-offline --no-audit --no-progress --cache ./vendor/.npm

      echo "--- :npm: Upload node_modules"
      tar --create --gzip --file=node_modules.tar.gz --directory=. node_modules
      buildkite-agent artifact upload node_modules.tar.gz

      echo "--- :arrow_up: Upload vendor/.npm cache"
      # TODO: Read location from npm itself?
      tar --create --gzip --file=npm_cache.tar.gz --directory=./vendor .npm
      buildkite-agent artifact upload npm_cache.tar.gz

  - label: Lint and Unit Tests
    depends_on: build-npm
    key: unit-tests
    plugins:
      - *gb-mobile-docker-container
    command: |
      source /root/.bashrc

      echo "--- :node: Setup Node environment"
      nvm install && nvm use

      echo "--- :arrow_down: Download vendor/.npm cache"
      buildkite-agent artifact download npm_cache.tar.gz .
      mkdir -p vendor
      tar --extract --gzip --file=npm_cache.tar.gz --directory=./vendor

      echo "--- :npm: Download node_modules"
      buildkite-agent artifact download node_modules.tar.gz .
      tar --extract --gzip --file=node_modules.tar.gz

      echo "--- :bug: Debug info"
      npm install --prefer-offline --no-audit --no-progress --cache ./vendor/.npm

      echo "--- :node: Lint and Unit Tests"
      ./bin/ci-checks-js.sh
    artifact_paths:
      - ./*-tests-out.log

  - label: "Build JS Bundles"
    depends_on: "unit-tests"
    key: "js-bundles"
    plugins:
      - *gb-mobile-docker-container
    command: |
        source /root/.bashrc

        echo "--- :node: Setup Node environment"
        nvm install && nvm use

        echo "--- :npm: Download cached dependencies"
        buildkite-agent artifact download node_modules.tar.gz .
        tar --extract --gzip --file=node_modules.tar.gz

        echo "--- :package: Run bundle prep work"
        npm run prebundle:js

        echo "--- :android: Build Android bundle"
        npm run bundle:android

        echo "--- :arrow_up: Upload Android bundle artifact"
        buildkite-agent artifact upload bundle/android/App.js

        echo "--- :ios: Build iOS bundle"
        npm run bundle:ios

        echo "--- :arrow_up: Upload iOS bundle artifact"
        buildkite-agent artifact upload bundle/ios/App.js
  - label: "Build Android RN Aztec & Publish to S3"
    depends_on: unit-tests
    key: "publish-react-native-aztec-android"
    plugins:
      - *publish-android-artifacts-docker-container
    command: |
        .buildkite/publish-react-native-aztec-android-artifacts.sh

  - label: "Build Android RN Bridge & Publish to S3"
    depends_on:
      - "js-bundles"
      - "publish-react-native-aztec-android"
    plugins:
      - *publish-android-artifacts-docker-container
    command: |
        .buildkite/publish-react-native-bridge-android-artifacts.sh

  - label: Build iOS RN XCFramework
    depends_on: js-bundles
    command: .buildkite/publish-react-native-ios-artifacts.sh
    artifact_paths:
      - ios-xcframework/build/xcframeworks/*.zip
    plugins:
      - automattic/a8c-ci-toolkit#2.15.1
      - peakon/git-shallow-clone#v0.0.1:
          depth: 1
    agents:
      queue: mac
    env:
      IMAGE_ID: xcode-14.3
