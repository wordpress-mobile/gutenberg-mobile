#!/bin/bash -eu

RESTORE_ONLY='false'
while [[ "$#" -gt 0 ]]; do
	case $1 in
		--restore-only) RESTORE_ONLY='true' ;;
		*) break ;;
	esac
	shift
done

PLATFORM=$(uname -s)
ARCHITECTURE=$(uname -m)
NODE_VERSION=$(node --version)

PACKAGE_HASH=$(hash_file package-lock.json)
GUTENBERG_PACKAGE_HASH=$(hash_file gutenberg/package-lock.json)
CACHEKEY="$BUILDKITE_PIPELINE_SLUG-npm-$PLATFORM-$ARCHITECTURE-node$NODE_VERSION-$PACKAGE_HASH-$GUTENBERG_PACKAGE_HASH"

JETPACK_PACKAGE_HASH=$(hash_file jetpack/pnpm-lock.yaml)
PNPM_CACHEKEY="$BUILDKITE_PIPELINE_SLUG-pnpm-$PLATFORM-$ARCHITECTURE-node$NODE_VERSION-$JETPACK_PACKAGE_HASH"

I18N_CACHEKEY="$BUILDKITE_PIPELINE_SLUG-i18n-$PLATFORM-$ARCHITECTURE-node$NODE_VERSION-$PACKAGE_HASH-$GUTENBERG_PACKAGE_HASH"

echo "--- :npm: Restore cache if present"
restore_cache "$CACHEKEY"
restore_cache "$PNPM_CACHEKEY"
restore_cache "$I18N_CACHEKEY"

if [[ "${RESTORE_ONLY}" ==  'true' ]]; then
  echo 'Exiting after restoring caches as per --restore-only call parameter.'
  exit 0
fi

echo "--- :npm: Install Node dependencies"

MAX_SOCKETS=15 # Default value from npm

# To avoid constant ECONNRESET errors a limit is set for Linux,
# as this is not happening with the Mac jobs.
# This issue is being tracked here:
# https://github.com/npm/cli/issues/4652
if [ "$PLATFORM" = "Linux" ]; then
  MAX_SOCKETS=1
fi

npm ci --unsafe-perm --prefer-offline --no-audit --no-progress --maxsockets "$MAX_SOCKETS" "$@"

echo "--- :npm: Save cache if necessary"
# Notice that we don't cache the local node_modules.
# Those get regenerated by npm ci as per Node reccomendations.
# What we are caching is the root npm folder, which stores pacakge downloads so they are available if the package.json resolution demands them.
#
# npm stores temporary files in ~/.npm that we don't want to extract because they might run into naming conflicts.
# So, before archiving it, we remove those tmp files.
#
# Example: https://buildkite.com/automattic/gutenberg-mobile/builds/8857#018e37eb-7afc-4280-b736-cba76f02f1a3/524
rm -rf "$HOME/.npm/_cacache/tmp"
save_cache "$HOME/.npm" "$CACHEKEY"
save_cache src/i18n-cache "$I18N_CACHEKEY"

# If we attempted to save the pnpm cache when npm run with '--prefix gutenberg', the command might fail.
# That's because the Jetpack submodule alone uses pnpm.
# Therefore, if no pnpm cache was available at the start, running with '--prefix gutenberg' would not have generated one and 'save_cache' would fail to find it.
if echo "$@" | grep -q -- '--prefix gutenberg'; then
  echo 'Skipping pnpm cach save due to --prefix gutenberg parameter while PNPM is used in Jetpack.'
  exit 0
fi

if [ "$PLATFORM" = "Darwin" ]; then
  PNPM_PATH="$HOME/Library/pnpm/store/v3"
elif [ "$PLATFORM" = "Linux" ]; then
  PNPM_PATH="$HOME/.local/share/pnpm/store/v3"
else
  echo "Unsupported platform: $PLATFORM."
  exit 1
fi

save_cache "$PNPM_PATH" "$PNPM_CACHEKEY"
